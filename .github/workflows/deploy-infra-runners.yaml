name: Terraform Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - dev
      - stage
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Github Branch & Terraform Infra
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}" \
            INFRA_STATE = network \
            BACKEND_STATE = false

          echo "Detected base branch: $BASE_BRANCH"

          case "$BASE_BRANCH" in
            dev)
              INFRA_ENV = dev
              VAR_FILE=../dev.tfvars
              ENV_OUT_FILE=../dev-tfplan
              ;;
            stage)
              INFRA_ENV = stage
              VAR_FILE=../stage.tfvars
              ENV_OUT_FILE=../stage-tfplan
              ;;
            main)
              INFRA_ENV = prod
              VAR_FILE=../prod.tfvars
              ENV_OUT_FILE=../prod-tfplan
              ;;
            *)
              echo "Unsupported base branch: $BASE_BRANCH"
              exit 1
              ;;
          esac

          echo "INFRA_ENV=$INFRA_ENV" >> $GITHUB_ENV
          echo "VAR_FILE=$VAR_FILE" >> $GITHUB_ENV
          echo "ENV_OUT_FILE=$ENV_OUT_FILE" >> $GITHUB_ENV
          echo "INFRA_STATE=$INFRA_STATE" >> $GITHUB_ENV
          echo "BACKEND_STATE=$BACKEND_STATE" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          echo "Initializing..."
          cd /home/github/actions-runner/_work/walkthrough/walkthrough
          ./run INFRA_ENV "$INFRA_STATE" init -var-file=$VAR_FILE \
          -backend=BACKEND_STATE

      - name: Terraform Plan and Apply
        run: |
          echo "Planning..."
          ./run INFRA_ENV "$INFRA_STATE" plan \
            -var-file=$VAR_FILE \
            -out=ENV_OUT_FILE \
            -backend="$BACKEND_STATE" \
            -input=false

      #     ./run INFRA_ENV "$INFRA_STATE" apply \
      #       OUT_FILE

      # - name: Terraform Destroy & Apply
      #   run: |
      #     echo "Getting ready.."
      #     cd /home/github/actions-runner/_work/walkthrough/walkthrough

      #     ./run INFRA_ENV "$INFRA_STATE" plan \
      #       -destroy
      #       -out=OUT_FILE

      #     ./run INFRA_ENV "$INFRA_STATE" apply \
      #       OUT_FILE

      # Export for other steps if needed
      - name: Export Variables to EVN
        run: |
          echo "INFRA_ENV=$INFRA_ENV" >> $GITHUB_ENV
          echo "VAR_FILE=$VAR_FILE" >> $GITHUB_ENV
          echo "ENV_OUT_FILE=$ENV_OUT_FILE" >> $GITHUB_ENV
          echo "INFRA_STATE=$INFRA_STATE" >> $GITHUB_ENV
          echo "BACKEND_STATE=$BACKEND_STATE" >> $GITHUB_ENV
