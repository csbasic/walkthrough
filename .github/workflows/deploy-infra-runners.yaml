name: Terraform Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - dev
      - stage
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Github Branch & Terraform Infra
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}" \
            echo INFRA_STATE=network
            echo BACKEND_STATE=true

          echo "Detected base branch: $BASE_BRANCH"

          case "$BASE_BRANCH" in
            dev)
              echo INFRA_ENV=dev
              echo VAR_FILE=../dev.tfvars
              echo ENV_OUT_FILE=../dev-tfplan
              ;;
            stage)
              echo INFRA_ENV=stage
              echo VAR_FILE=../stage.tfvars
              echo ENV_OUT_FILE=../stage-tfplan
              ;;
            main)
              echo INFRA_ENV=prod
              echo VAR_FILE=../prod.tfvars
              echo ENV_OUT_FILE=../prod-tfplan
              ;;
            *)
              echo "Unsupported base branch: $BASE_BRANCH"
              exit 1
              ;;
          esac

      - name: Set Terraform & Configure Infra
        run: |
          echo "Initializing..."
          cd /home/github/actions-runner/_work/walkthrough/walkthrough
          echo ./run "$INFRA_ENV" "$INFRA_STATE" init -var-file="$VAR_FILE"
            

          echo "Planning..."
          ./run "$INFRA_ENV" "$INFRA_STATE" plan \
            -var-file="$VAR_FILE" \
            -out=ENV_OUT_FILE \

            -input=false

      #     ./run "$INFRA_ENV" "$INFRA_STATE" apply \
      #       OUT_FILE

      # - name: Terraform Destroy & Apply
      #   run: |
      #     echo "Getting ready.."
      #     cd /home/github/actions-runner/_work/walkthrough/walkthrough

      #     ./run "$INFRA_ENV" "$INFRA_STATE" plan \
      #       -destroy
      #       -out=OUT_FILE

      #     ./run "$INFRA_ENV" "$INFRA_STATE" apply \
      #       OUT_FILE
