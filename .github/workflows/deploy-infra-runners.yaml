name: Terraform Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - dev
      - stage
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Terraform version
        run: terraform version

      - name: Debug Base Branch
        run: |

          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "Pull Request Event: $EVENT_DATA"
        env:
          EVENT_DATA: ${{ toJson(github.event) }}

      - name: Set Environment Based on Base Branch
        run: |
          if [[ -z "$GITHUB_BASE_REF" ]]; then
            echo "GITHUB_BASE_REF is empty. Make sure this workflow is triggered by a pull request."
            exit 1
          fi

          echo "Pull Request Base Branch: $GITHUB_BASE_REF"
          if [[ "$GITHUB_BASE_REF" == "dev" ]]; then
            echo "This PR targets the 'dev' branch."
            echo "ENV=dev" >> $GITHUB_ENV
          elif [[ "$GITHUB_BASE_REF" == "stage" ]]; then
            echo "This PR targets the 'stage' branch."
            echo "ENV=stage" >> $GITHUB_ENV
          elif [[ "$GITHUB_BASE_REF" == "main" ]]; then
            echo "This PR targets the 'main' branch."
            echo "ENV=prod" >> $GITHUB_ENV
          else
            echo "This PR targets an unsupported branch."
            exit 1
          fi

      - name: Run Environment-Specific Steps
        run: |
          if [[ "${ENV}" == "dev" ]]; then
            echo "Running development tasks..."
          elif [[ "${ENV}" == "stage" ]]; then
            echo "Running stage tasks..."
          elif [[ "${ENV}" == "prod" ]]; then
            echo "Running production tasks..."
          fi

      # Development Environment
      - name: Setup Terraform Infrastructure (Development Only)
        if: env.ENV == 'dev'
        run: |
          echo "Setting up infrastructure for development - network state..."
          cd /home/github/actions-runner/_work/walkthrough/walkthrough
          ./run dev network init -var-file=../dev.tfvars
          ./run dev network plan -var-file=../dev.tfvars -out=../tfplan
        env:
          ENV: dev

      # Staging Environment
      - name: Setup Terraform Infrastructure (Staging Only)
        if: env.ENV == 'stage'
        run: |
          echo "Setting up infrastructure for staging - network state..."
          cd /home/github/actions-runner/_work/walkthrough/walkthrough
          ./run stage network init -var-file=../stage.tfvars
          ./run stage network plan -var-file=../stage.tfvars -out=../tfplan
        env:
          ENV: stage

      # Production Environment
      - name: Setup Terraform Infrastructure (Production Only)
        if: env.ENV == 'prod'
        run: |
          echo "Setting up infrastructure for production - network state..."
          cd /home/github/actions-runner/_work/walkthrough/walkthrough
          ./run pro network init -var-file=../pro.tfvars
          ./run pro network plan -var-file=../pro.tfvars -out=../tfplan
        env:
          ENV: production
