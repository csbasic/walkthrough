name: Terraform Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - dev
      - stage
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted

    strategy:
      matrix:
        include:
          - branch: dev
            env: dev
          - branch: stage
            env: staging
          - branch: main
            env: prod

    steps:
      - name: Skip non-matching branch
        if: ${{ github.base_ref != matrix.branch }}
        run: |
          echo "Skipping matrix branch: ${{ matrix.branch }}"

      - name: Exit if branch doesn't match
        if: ${{ github.base_ref != matrix.branch }}
        run: exit 0

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set ENV variable
        run: echo "ENV=${{ matrix.env }}" >> $GITHUB_ENV

      - name: Cache Terraform Provider Plugins
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-plugin-${{ matrix.env }}-${{ runner.os }}-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            terraform-plugin-${{ matrix.env }}-${{ runner.os }}-

      - name: Cache Terraform .terraform Directory
        uses: actions/cache@v3
        with:
          path: ./walkthrough/${{ matrix.env }}/.terraform
          key: terraform-dir-${{ matrix.env }}-${{ runner.os }}-${{ hashFiles('walkthrough/**/*.tf') }}
          restore-keys: |
            terraform-dir-${{ matrix.env }}-${{ runner.os }}-

      - name: Echo Current Environment
        run: echo "Deploying environment $ENV"

      - name: Verify Directory Exists
        run: |
          DIR_PATH="./walkthrough/${ENV}/"
          echo "Checking for directory: $DIR_PATH"
          if [ ! -d "$DIR_PATH" ]; then
            echo "Error: Directory $DIR_PATH does not exist."
            exit 1
          fi

      - name: Setup Terraform Infrastructure Based on ENV
        working-directory: walkthrough/${{ env.ENV }}
        run: |
          echo "Running Terraform for $ENV..."
          case "${ENV}" in
            dev)
              ./run dev init -var-file=../dev.tfvars
              ./run dev plan -var-file=../dev.tfvars -out=../tfplan
              ;;
            staging)
              ./run stage init -var-file=../stage.tfvars
              ./run stage plan -var-file=../stage.tfvars -out=../tfplan
              ;;
            prod)
              ./run pro init -var-file=../pro.tfvars
              ./run pro plan -var-file=../pro.tfvars -out=../tfplan
              ;;
            *)
              echo "Unknown ENV: $ENV"
              exit 1
              ;;
          esac
